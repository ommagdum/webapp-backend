spring.application.name=webapp-backend
spring.datasource.url=${DB_URL:jdbc:postgresql://localhost:5432/your_db_name}
spring.datasource.username=${DB_USERNAME:your_db_username}
spring.datasource.password=${DB_PASSWORD:your_db_password}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.hbm2ddl.auto=update
jwt.secret=${JWT_SECRET:your_jwt_secret_key_here}
jwt.expiration=86400000
logging.level.org.springframework.security=DEBUG
jwt.access-token.expiration=${JWT_ACCESS_EXPIRATION:900000}
jwt.refresh-token.expiration=${JWT_REFRESH_EXPIRATION:604800000}

spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=${SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${FORMAT_SQL:true}

ml.service.url=${ML_SERVICE_URL:http://localhost:5001}
logging.level.com.mlspamdetection.webapp_backend.security=${SECURITY_LOG_LEVEL:TRACE}

# Email Configuration
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME:your_email@gmail.com}
spring.mail.password=${MAIL_PASSWORD:your_email_app_password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Base URL for verification links
app.base-url=${APP_BASE_URL:http://localhost:8080}

# OAuth Config
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:your_client_id_here}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:your_client_secret_here}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri=${GOOGLE_REDIRECT_URI:http://localhost:8080/login/oauth2/code/google}
# OAuth2 redirect URI
app.oauth2.redirectUri=${OAUTH2_REDIRECT_URI:http://localhost:5173/oauth2/redirect}

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=300s
